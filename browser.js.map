{"version":3,"file":"browser.js","sources":["../lib/main.js","../node_modules/@stdlib/math-base-assert-is-nanf/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\n\n\n// MAIN //\n\n/**\n* Evaluates the Heaviside function for a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @param {string} [continuity] - continuity option\n* @returns {number} function value\n*\n* @example\n* var v = heavisidef( 3.14 );\n* // returns 1.0\n*\n* @example\n* var v = heavisidef( -3.14 );\n* // returns 0.0\n*\n* @example\n* var v = heavisidef( 0.0 );\n* // returns NaN\n*\n* @example\n* var v = heavisidef( 0.0, 'half-maximum' );\n* // returns 0.5\n*\n* @example\n* var v = heavisidef( 0.0, 'left-continuous' );\n* // returns 0.0\n*\n* @example\n* var v = heavisidef( 0.0, 'right-continuous' );\n* // returns 1.0\n*\n* @example\n* var v = heavisidef( NaN );\n* // returns NaN\n*/\nfunction heavisidef( x, continuity ) {\n\tif ( isnanf( x ) ) {\n\t\treturn NaN;\n\t}\n\tif ( x > 0.0 ) {\n\t\treturn 1.0;\n\t}\n\t// Handle `+-0`...\n\tif ( x === 0.0 ) {\n\t\tif ( continuity === 'half-maximum' ) {\n\t\t\treturn 0.5;\n\t\t}\n\t\tif ( continuity === 'left-continuous' ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( continuity === 'right-continuous' ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\t// Default behavior is discontinuity...\n\t\treturn NaN;\n\t}\n\treturn 0.0;\n}\n\n\n// EXPORTS //\n\nexport default heavisidef;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Tests if a single-precision floating-point numeric value is `NaN`.\n*\n* @param {number} x - value to test\n* @returns {boolean} boolean indicating whether the value is `NaN`\n*\n* @example\n* var bool = isnanf( NaN );\n* // returns true\n*\n* @example\n* var bool = isnanf( 7.0 );\n* // returns false\n*/\nfunction isnanf( x ) {\n\treturn ( x !== x );\n}\n\n\n// EXPORTS //\n\nexport default isnanf;\n"],"names":["x","continuity","isnanf","NaN"],"mappings":";gDA8DA,SAAqBA,EAAGC,GACvB,OC3BD,SAAiBD,GAChB,OAASA,GAAMA,CAChB,CDyBME,CAAQF,GACLG,IAEHH,EAAI,EACD,EAGG,IAANA,EACgB,iBAAfC,EACG,GAEY,oBAAfA,EACG,EAEY,qBAAfA,EACG,EAGDE,IAED,CACR","x_google_ignoreList":[1]}